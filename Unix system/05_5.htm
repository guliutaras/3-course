<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Лабораторна робота № 2, Гулий Тарас, ПК-15-1</title>
</head>
<body>
<h1 align=center>Лабораторна робота № 5</h1>
<h2 align=center>Завдання</h2>
<p align=justify>Створіть окремий файл на мові C. Запишіть у ньому функцію, що приймає два параметри. 
Скомпілюйте динамічну бібліотеку з роширенням so. Створіть основну програму, що буде викликати дану функцію. Використати статичну та динамічну загрузку бібліотеки.</p>
<h2 align=center>Текст розв'язку</h2>
<h3 align=center>libmax.c</h3>
<xmp>
include "libmax.h"
int find_max(int a, int b)
{
	return a>b?a : b;
}
</xmp>
<h3 align=center>libmax.h</h3>
<xmp>
extern int find_max(int, int);
</xmp>
<h3 align=center>main.c</h3>
<xmp>
#include <stdio.h>
#include "libmax.h"

int main()
{
	printf("find_max(-1,6)=%i",find_max(-1,6));
}
</xmp>
<h3 align=center>Список команд правильної компіляції</h3>
<xmp>
gcc -o libmax -shared libmax.c
gcc -o main -L. -lmax main.c
LD_LIBRARY_PATH= .:[та директория, де знаходиться динамічна бібліотека]
./main
</xmp>
<h2 align=center>Пояснення</h2>
<p align=justify>
Для створення бібліотеки було написано маленький модуль із функцією find_max яка знаходить максимальне з двох цілих чисел.
У заголовочному файлі було оголошено дану функцію як екпортовану, в такому вигляді ми будемо доставати її із бібліотеки.
Потім було написано головну програму, яка використовує данну функцію. Вся "сіль" задачі постає у порядку компіляції програми.
Необхідно чітко розуміти який файл буде отримано на виході і як правильно скомпілювати вихідну програму.
Отже, початку було скомпільовано libmax з тегом -shared потім виконалась компіляція основної програми а потім до змінної оточення
було додано шлях до директорії для того щоб під час запуску програми бібліотека була успішно знайдена.
</p>
</body>
</html>
